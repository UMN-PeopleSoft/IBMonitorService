plugins {
    id 'groovy'
    id 'application'
    id 'org.unbroken-dome.test-sets' version '1.2.0'
    id 'com.intershop.gradle.jaxb' version '1.0.0'
}

mainClassName = 'edu.umn.pssa.ibmonitorservice.IBMonitorSvc'

repositories.jcenter()
dependencies {
    // mandatory dependencies for using Spock
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

    compile files('src/main/resources/ibmonitorconfig.jar')

    compile 'com.oracle:ojdbc6:11.2.0.3'
    compile 'log4j:log4j:1.2.17'
    compile 'javax.mail:mail:1.4.7'
}

run {
    if(System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}

jaxb {
    // generate java code from schema
    javaGen {
        //generates a 'project' schema file from existing java code
        configType {
            packageName = 'edu.umn.pssa.ibmonitorservice'
            schema = file('src/main/resources/configs.xsd')
            //binding = file('binding.xjb')
        }
    }
}

//task compileJaxb(type:JavaCompile) {
task compileJaxb(dependsOn:jaxbJavaGenConfigType, type:JavaCompile) {
    source('build/generated/jaxb/java/configType')
    classpath = sourceSets.main.compileClasspath
    destinationDir = file('build/generated/jaxb/java/configType')
}
jaxbJavaGenConfigType.description = 'Generate app configuration JaXB sources'

compileJaxb.description = 'Compile JaXB-generated sources'
task jarJaxbJava(dependsOn:compileJaxb, type: Jar){
    archiveName = 'ibmonitorconfig.jar'
    from('build/generated/jaxb/java/configType')
    destinationDir = file('src/main/resources')
}
jarJaxbJava.group = 'Jaxb code generation'
jarJaxbJava.description = 'Generate compiled JAr of JaXB-generated sources'

testSets {
    integrationTest { dirName = 'integration-test' }
}
integrationTest.group = 'Verification'
integrationTest.description = 'Runs the integration tests.'
integrationTestJar.group =
tasks.withType(Test) {
    testLogging.exceptionFormat = 'full'
}
